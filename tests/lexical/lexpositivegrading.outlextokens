[eq, ==, 1] [plus, +, 1] [or, or, 1] [openpar, (, 1] [semi, ;, 1] [integer, integer, 1] [while, while, 1] [localvar, localvar, 1]
[noteq, <>, 2] [minus, -, 2] [and, and, 2] [closepar, ), 2] [comma, ,, 2] [float, float, 2] [if, if, 2] [constructor, constructor, 2]
[lt, <, 3] [mult, *, 3] [not, not, 3] [opencubr, {, 3] [dot, ., 3] [void, void, 3] [then, then, 3] [attribute, attribute, 3]
[gt, >, 4] [div, /, 4] [closecubr, }, 4] [colon, :, 4] [class, class, 4] [else, else, 4] [function, function, 4]
[leq, <=, 5] [assign, =, 5] [opensqbr, [, 5] [returntype, =>, 5] [self, self, 5] [read, read, 5] [public, public, 5]
[geq, >=, 6] [opensqbr, ], 6] [scopeop, ::, 6] [isa, isa, 6] [write, write, 6] [private, private, 6]
[return, return, 7]
[intnum, 0, 9]
[floatnum, 1.0e0, 10]
[floatnum, 0.123e-1, 11]
[floatnum, 1.0, 12]
[intnum, 1, 13]
[intnum, 10, 14]
[intnum, 12, 15]
[intnum, 123, 16]
[intnum, 12345, 17]
[floatnum, 0.0, 18]
[id, inta, 19] [plus, +, 19] [id, b, 19]
[id, a, 21] [plus, +, 21] [id, b, 21] [eq, ==, 21] [id, cfas, 21] [div, /, 21] [intnum, 213131, 21]
[floatnum, 1.0e23423, 22] [plus, +, 22] [intnum, 23423, 22] [leq, <=, 22] [intnum, 324213, 22] [mult, *, 22] [floatnum, 11333.34243242, 22]
[floatnum, 1.23, 24]
[floatnum, 12.34, 25]
[floatnum, 120.34e10, 26]
[floatnum, 12345.6789e-123, 27]
[floatnum, 0.0e0, 28]
[id, abc, 30]
[id, abc1, 31]
[id, a1bc, 32]
[id, abc_1abc, 33]
[id, abc1_abc, 34]
[blockcmt, // this is an inline comment , 36]
[inlinecmt, /*this is a single line block comment */, 38]
[inlinecmt, /*this is a  
multiple line 
block comment  
*/, 43]
[inlinecmt, /*this is an imbricated  
/*block comment 
*/
*/, 48]