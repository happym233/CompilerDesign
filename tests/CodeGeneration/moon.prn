MOON listing of .\a-bubblesort.m.

    1     0                                             % begin of function definition: bubbleSort
    2     0  bubbleSort                                 
    3     0             sw         -4(r14),r15          % push r15 on stack frame
    4     4             lw         r1,-12(r14)          % load value for n
    5     8             sw         -16(r14),r1          % assign n
    6    12             addi       r1,r0,0              % load intnum: 0
    7    16             sw         -32(r14),r1          
    8    20             lw         r1,-32(r14)          % load value for i
    9    24             sw         -20(r14),r1          % assign i
   10    28             addi       r1,r0,0              % load intnum: 0
   11    32             sw         -36(r14),r1          
   12    36             lw         r1,-36(r14)          % load value for temp
   13    40             sw         -28(r14),r1          % assign temp
   14    44  tag1                                       % while statement
   15    44             addi       r1,r0,1              % load intnum: 1
   16    48             sw         -40(r14),r1          
   17    52             lw         r1,-16(r14)          % addOp operation
   18    56             lw         r2,-40(r14)          
   19    60             sub        r3,r1,r2             
   20    64             sw         -44(r14),r3          
   21    68             lw         r1,-20(r14)          % relExpr i lt t4_533810548
   22    72             lw         r2,-44(r14)          
   23    76             clt        r3,r1,r2             
   24    80             sw         -48(r14),r3          
   25    84             lw         r3,-48(r14)          
   26    88             bz         r3,tag2              
   27    92             addi       r3,r0,0              % load intnum: 0
   28    96             sw         -52(r14),r3          
   29   100             lw         r3,-52(r14)          % load value for j
   30   104             sw         -24(r14),r3          % assign j
   31   108  tag3                                       % while statement
   32   108             addi       r3,r0,1              % load intnum: 1
   33   112             sw         -56(r14),r3          
   34   116             lw         r3,-20(r14)          % addOp operation
   35   120             lw         r2,-56(r14)          
   36   124             add        r1,r3,r2             
   37   128             sw         -60(r14),r1          
   38   132             lw         r3,-16(r14)          % addOp operation
   39   136             lw         r2,-60(r14)          
   40   140             sub        r1,r3,r2             
   41   144             sw         -64(r14),r1          
   42   148             lw         r3,-24(r14)          % relExpr j lt t9_533810548
   43   152             lw         r2,-64(r14)          
   44   156             clt        r1,r3,r2             
   45   160             sw         -68(r14),r1          
   46   164             lw         r1,-68(r14)          
   47   168             bz         r1,tag4              
   48   172                                             % if statement
   49   172             addi       r1,r0,1              % load intnum: 1
   50   176             sw         -72(r14),r1          
   51   180             lw         r1,-24(r14)          % addOp operation
   52   184             lw         r2,-72(r14)          
   53   188             add        r3,r1,r2             
   54   192             sw         -76(r14),r3          
   55   196             lw         r1,-24(r14)          % relExpr for both array operands
   56   200             muli       r2,r1,4              
   57   204             lw         r3,arr(r2)           
   58   208             lw         r4,-76(r14)          
   59   212             muli       r5,r4,4              
   60   216             lw         r6,arr(r5)           
   61   220             cgt        r7,r3,r6             
   62   224             sw         -80(r14),r7          
   63   228             lw         r1,-80(r14)          
   64   232             bz         r1,tag5              
   65   236             lw         r1,-24(r14)          % load value for temp
   66   240             muli       r2,r1,4              
   67   244             lw         r3,arr(r2)           
   68   248             sw         -28(r14),r3          % assign temp
   69   252             addi       r1,r0,1              % load intnum: 1
   70   256             sw         -84(r14),r1          
   71   260             lw         r1,-24(r14)          % addOp operation
   72   264             lw         r2,-84(r14)          
   73   268             add        r3,r1,r2             
   74   272             sw         -88(r14),r3          
   75   276             lw         r1,-88(r14)          % load value for arr
   76   280             muli       r2,r1,4              
   77   284             lw         r3,arr(r2)           
   78   288             lw         r4,-24(r14)          
   79   292             muli       r5,r4,4              
   80   296             sw         arr(r5),r3           % assign arr
   81   300             addi       r1,r0,1              % load intnum: 1
   82   304             sw         -92(r14),r1          
   83   308             lw         r1,-24(r14)          % addOp operation
   84   312             lw         r2,-92(r14)          
   85   316             add        r3,r1,r2             
   86   320             sw         -96(r14),r3          
   87   324             lw         r1,-28(r14)          % load value for arr
   88   328             lw         r2,-96(r14)          
   89   332             muli       r3,r2,4              
   90   336             sw         arr(r3),r1           % assign arr
   91   340             j          tag6                 
   92   344  tag5                                       
   93   344  tag6                                       
   94   344             addi       r1,r0,1              % load intnum: 1
   95   348             sw         -100(r14),r1         
   96   352             lw         r1,-24(r14)          % addOp operation
   97   356             lw         r2,-100(r14)         
   98   360             add        r3,r1,r2             
   99   364             sw         -104(r14),r3         
  100   368             lw         r1,-104(r14)         % load value for j
  101   372             sw         -24(r14),r1          % assign j
  102   376             j          tag3                 
  103   380  tag4                                       
  104   380             addi       r1,r0,1              % load intnum: 1
  105   384             sw         -108(r14),r1         
  106   388             lw         r1,-20(r14)          % addOp operation
  107   392             lw         r2,-108(r14)         
  108   396             add        r3,r1,r2             
  109   400             sw         -112(r14),r3         
  110   404             lw         r1,-112(r14)         % load value for i
  111   408             sw         -20(r14),r1          % assign i
  112   412             j          tag1                 
  113   416  tag2                                       
  114   416             addi       r1,r0,0              % load intnum: 0
  115   420             sw         -116(r14),r1         
  116   424                                             % return
  117   424             lw         r1,-116(r14)         % load returned value from mem
  118   428             sw         0(r14),r1            
  119   432             lw         r15,-4(r14)          % retrieve r15 from stack
  120   436             jr         r15                  % jump back to calling function
  121   440             hlt                             % end of function definition: bubbleSort
  122   444                                             % begin of function definition: printArray
  123   444  printArray                                 
  124   444             sw         -4(r14),r15          % push r15 on stack frame
  125   448             lw         r1,-12(r14)          % load value for n
  126   452             sw         -16(r14),r1          % assign n
  127   456             addi       r1,r0,0              % load intnum: 0
  128   460             sw         -24(r14),r1          
  129   464             lw         r1,-24(r14)          % load value for i
  130   468             sw         -20(r14),r1          % assign i
  131   472  tag7                                       % while statement
  132   472             lw         r1,-20(r14)          % relExpr i lt n
  133   476             lw         r2,-16(r14)          
  134   480             clt        r3,r1,r2             
  135   484             sw         -28(r14),r3          
  136   488             lw         r3,-28(r14)          
  137   492             bz         r3,tag8              
  138   496             lw         r3,-20(r14)          
  139   500             muli       r2,r3,4              
  140   504             lw         r1,arr(r2)           % print integer array: arr
  141   508             jl         r15,putint           
  142   512             addi       r3,r0,0              % print a newline
  143   516             lb         r2,newline(r3)       
  144   520             putc       r2                   
  145   524             addi       r3,r3,1              
  146   528             lb         r2,newline(r3)       
  147   532             putc       r2                   
  148   536             addi       r3,r0,1              % load intnum: 1
  149   540             sw         -32(r14),r3          
  150   544             lw         r3,-20(r14)          % addOp operation
  151   548             lw         r2,-32(r14)          
  152   552             add        r1,r3,r2             
  153   556             sw         -36(r14),r1          
  154   560             lw         r3,-36(r14)          % load value for i
  155   564             sw         -20(r14),r3          % assign i
  156   568             j          tag7                 
  157   572  tag8                                       
  158   572             addi       r3,r0,0              % load intnum: 0
  159   576             sw         -40(r14),r3          
  160   580                                             % return
  161   580             lw         r3,-40(r14)          % load returned value from mem
  162   584             sw         0(r14),r3            
  163   588             lw         r15,-4(r14)          % retrieve r15 from stack
  164   592             jr         r15                  % jump back to calling function
  165   596             hlt                             % end of function definition: printArray
  166   600             align                           
  167   600                                             % begin of main function
  168   600  main       entry                           % start program
  169   600             addi       r14,r0,topaddr       
  170   604             addi       r3,r0,0              % load intnum: 0
  171   608             sw         -44(r14),r3          
  172   612             addi       r3,r0,64             % load intnum: 64
  173   616             sw         -48(r14),r3          
  174   620             lw         r3,-48(r14)          % load value for arr
  175   624             lw         r2,-44(r14)          
  176   628             muli       r1,r2,4              
  177   632             sw         arr(r1),r3           % assign arr
  178   636             addi       r3,r0,1              % load intnum: 1
  179   640             sw         -52(r14),r3          
  180   644             addi       r3,r0,34             % load intnum: 34
  181   648             sw         -56(r14),r3          
  182   652             lw         r3,-56(r14)          % load value for arr
  183   656             lw         r2,-52(r14)          
  184   660             muli       r1,r2,4              
  185   664             sw         arr(r1),r3           % assign arr
  186   668             addi       r3,r0,2              % load intnum: 2
  187   672             sw         -60(r14),r3          
  188   676             addi       r3,r0,25             % load intnum: 25
  189   680             sw         -64(r14),r3          
  190   684             lw         r3,-64(r14)          % load value for arr
  191   688             lw         r2,-60(r14)          
  192   692             muli       r1,r2,4              
  193   696             sw         arr(r1),r3           % assign arr
  194   700             addi       r3,r0,3              % load intnum: 3
  195   704             sw         -68(r14),r3          
  196   708             addi       r3,r0,12             % load intnum: 12
  197   712             sw         -72(r14),r3          
  198   716             lw         r3,-72(r14)          % load value for arr
  199   720             lw         r2,-68(r14)          
  200   724             muli       r1,r2,4              
  201   728             sw         arr(r1),r3           % assign arr
  202   732             addi       r3,r0,4              % load intnum: 4
  203   736             sw         -76(r14),r3          
  204   740             addi       r3,r0,22             % load intnum: 22
  205   744             sw         -80(r14),r3          
  206   748             lw         r3,-80(r14)          % load value for arr
  207   752             lw         r2,-76(r14)          
  208   756             muli       r1,r2,4              
  209   760             sw         arr(r1),r3           % assign arr
  210   764             addi       r3,r0,5              % load intnum: 5
  211   768             sw         -84(r14),r3          
  212   772             addi       r3,r0,11             % load intnum: 11
  213   776             sw         -88(r14),r3          
  214   780             lw         r3,-88(r14)          % load value for arr
  215   784             lw         r2,-84(r14)          
  216   788             muli       r1,r2,4              
  217   792             sw         arr(r1),r3           % assign arr
  218   796             addi       r3,r0,6              % load intnum: 6
  219   800             sw         -92(r14),r3          
  220   804             addi       r3,r0,90             % load intnum: 90
  221   808             sw         -96(r14),r3          
  222   812             lw         r3,-96(r14)          % load value for arr
  223   816             lw         r2,-92(r14)          
  224   820             muli       r1,r2,4              
  225   824             sw         arr(r1),r3           % assign arr
  226   828             addi       r3,r0,7              % load intnum: 7
  227   832             sw         -100(r14),r3         
  228   836                                             % function call to printArray
  229   836             lw         r3,-8(r14)           % pass arr into parameter
  230   840             sw         -132(r14),r3         
  231   844             lw         r3,-100(r14)         % pass t43_533810548 into parameter
  232   848             sw         -136(r14),r3         
  233   852             subi       r14,r14,124          % increment stack frame
  234   856             jl         r15,printArray       % jump to funciton: printArray
  235   860             addi       r14,r14,124          % decrement stack frame
  236   864             lw         r3,-124(r14)         % get return value from printArray
  237   868             sw         -104(r14),r3         
  238   872             addi       r3,r0,7              % load intnum: 7
  239   876             sw         -108(r14),r3         
  240   880                                             % function call to bubbleSort
  241   880             lw         r3,-8(r14)           % pass arr into parameter
  242   884             sw         -132(r14),r3         
  243   888             lw         r3,-108(r14)         % pass t45_533810548 into parameter
  244   892             sw         -136(r14),r3         
  245   896             subi       r14,r14,124          % increment stack frame
  246   900             jl         r15,bubbleSort       % jump to funciton: bubbleSort
  247   904             addi       r14,r14,124          % decrement stack frame
  248   908             lw         r3,-124(r14)         % get return value from bubbleSort
  249   912             sw         -112(r14),r3         
  250   916             addi       r3,r0,7              % load intnum: 7
  251   920             sw         -116(r14),r3         
  252   924                                             % function call to printArray
  253   924             lw         r3,-8(r14)           % pass arr into parameter
  254   928             sw         -132(r14),r3         
  255   932             lw         r3,-116(r14)         % pass t47_533810548 into parameter
  256   936             sw         -136(r14),r3         
  257   940             subi       r14,r14,124          % increment stack frame
  258   944             jl         r15,printArray       % jump to funciton: printArray
  259   948             addi       r14,r14,124          % decrement stack frame
  260   952             lw         r3,-124(r14)         % get return value from printArray
  261   956             sw         -120(r14),r3         
  262   960             hlt                             % end of function definition: main
  263   964 hlt
  264   968  newline    db         13,10                % The bytes 13 and 10 are return and linefeed, respectively
  265   970  align                                      
  266   972  arr        res        28  
